{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mutee\\\\OneDrive\\\\Desktop\\\\cpsc471\\\\project\\\\cpsc471-database-project\\\\client\\\\src\\\\components\\\\Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n//import './App.css';\nimport Axios from 'axios';\n// import DatePicker from 'react-datepicker';\nimport DatePicker from 'react-datetime';\nimport { BrowserRouter as Router, Switch, Route, Link, useNavigate, useParams, useLocation } from 'react-router-dom';\nimport '../components/Calendar.css';\nimport InvalidDatePopup from \"./InvalidDatePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calendar(props) {\n  _s();\n  const [prevReservations, setPrevReservations] = useState([]);\n  const min = props.availableStart;\n  const max = props.availableEnd;\n  const [date, setDate] = useState(new Date());\n  const getReservations = () => {\n    Axios.post('http://localhost:3001/api/unavailableDates', {\n      regNo: props.regNumber\n    }).then(response => {\n      setPrevReservations(response.data);\n    });\n  };\n  const disableDates = date => {\n    const s = new Date(props.availableStart);\n    const e = new Date(props.availableEnd);\n    if (date < s || date > e) {\n      return false;\n    }\n    if (props.sDate == \"start\") {\n      for (let i = 0; i < prevReservations.length; i++) {\n        const start = new Date(prevReservations[i].start_date);\n        const end = new Date(prevReservations[i].end_date);\n        const nStart = new Date(props.sDate);\n        if (date >= start && date <= end) {\n          return false;\n        }\n      }\n      return true;\n    } else {\n      for (let i = 0; i < prevReservations.length; i++) {\n        const start = new Date(prevReservations[i].start_date);\n        const end = new Date(prevReservations[i].end_date);\n        const nStart = new Date(props.sDate);\n        if (date < nStart) {\n          return false;\n        } else if (date >= start && start > nStart) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  const checkDate = (selected, check) => {\n    for (let i = 0; i < prevReservations.length; i++) {\n      const start = new Date(prevReservations[i].start_date);\n      const end = new Date(prevReservations[i].end_date);\n      console.log(start);\n      if (new Date(selected) < start && check > start) {\n        console.log(\"we in here\");\n        return false;\n      } else {\n        return true;\n      }\n    }\n    return true;\n  };\n  const handleDateChange = date => {\n    if (props.sDate == \"start\") {\n      props.setDate(date.toISOString().substring(0, 10));\n    } else {\n      var one = new Date(props.sDate);\n      var two = new Date(date.toISOString().substring(0, 10));\n      var diff = Math.abs(two - one);\n      console.log(diff / 86400);\n      props.setDate(date.toISOString().substring(0, 10));\n    }\n  };\n  const [startDate, setStartDate] = useState(new Date());\n  getReservations();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DatePicker, {\n      onChange: handleDateChange,\n      mode: \"range\",\n      timeFormat: false,\n      isValidDate: disableDates,\n      placeholder: \"Select date\",\n      className: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Calendar, \"bFxwQpNsQjUU2gPTzRx09/sdePE=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Axios","DatePicker","BrowserRouter","Router","Switch","Route","Link","useNavigate","useParams","useLocation","InvalidDatePopup","Calendar","props","prevReservations","setPrevReservations","min","availableStart","max","availableEnd","date","setDate","Date","getReservations","post","regNo","regNumber","then","response","data","disableDates","s","e","sDate","i","length","start","start_date","end","end_date","nStart","checkDate","selected","check","console","log","handleDateChange","toISOString","substring","one","two","diff","Math","abs","startDate","setStartDate"],"sources":["C:/Users/mutee/OneDrive/Desktop/cpsc471/project/cpsc471-database-project/client/src/components/Calendar.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"; \r\n//import './App.css';\r\nimport Axios from 'axios';\r\n// import DatePicker from 'react-datepicker';\r\nimport DatePicker from 'react-datetime';\r\nimport {BrowserRouter as Router, Switch, Route, Link, useNavigate, useParams, useLocation} from 'react-router-dom';\r\nimport '../components/Calendar.css'\r\nimport InvalidDatePopup from \"./InvalidDatePopup\";\r\nfunction Calendar(props){\r\n    const [prevReservations,setPrevReservations] = useState([]);\r\n    const min = props.availableStart;\r\n    const max = props.availableEnd;\r\n    const [date, setDate] = useState(new Date());\r\n\r\n\r\n    const getReservations = () =>{\r\n        Axios.post('http://localhost:3001/api/unavailableDates', {\r\n        regNo:  props.regNumber\r\n        }).then((response)=>{    \r\n            setPrevReservations(response.data)\r\n        });    \r\n    }\r\n\r\n   \r\n    const disableDates = date => {\r\n        const s = new Date(props.availableStart);\r\n        const e = new Date(props.availableEnd);\r\n        if (date < s || date > e) {\r\n            return false;\r\n        }\r\n        if (props.sDate == \"start\"){\r\n\r\n            for (let i = 0; i < prevReservations.length; i++) {\r\n                const start = new Date(prevReservations[i].start_date);\r\n                const end = new Date(prevReservations[i].end_date);\r\n                const nStart = new Date(props.sDate)\r\n                \r\n                if (date >= start  && date <= end) {\r\n                    return false;\r\n                }\r\n                \r\n            } \r\n            return true;  \r\n        }\r\n        else{\r\n            for (let i = 0; i < prevReservations.length; i++) {\r\n                const start = new Date(prevReservations[i].start_date);\r\n                const end = new Date(prevReservations[i].end_date);\r\n                const nStart = new Date(props.sDate)\r\n                \r\n                if (date< nStart) {\r\n                    \r\n                    return false;\r\n                }\r\n                else if(date >= start && start > nStart){\r\n                    return false;\r\n                }\r\n                \r\n                \r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n          \r\n        \r\n    };\r\n\r\n    const checkDate = (selected, check) => {\r\n        for (let i = 0; i < prevReservations.length; i++) {\r\n            const start = new Date(prevReservations[i].start_date);\r\n            const end = new Date(prevReservations[i].end_date);\r\n            console.log(start)\r\n            if (new Date(selected) < start  && check > start) {\r\n                console.log(\"we in here\")     \r\n                return false;\r\n            }\r\n            else{return true;}\r\n        }     \r\n        return true;\r\n    };\r\n    const handleDateChange = (date) => {\r\n            if(props.sDate ==\"start\"){\r\n                props.setDate(date.toISOString().substring(0, 10));\r\n            }\r\n            else{\r\n                var one = new Date(props.sDate)\r\n                var two = new Date(date.toISOString().substring(0, 10))\r\n                var diff = Math.abs(two-one); \r\n                console.log(diff/86400);\r\n\r\n                props.setDate(date.toISOString().substring(0, 10));\r\n            }\r\n    }\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    getReservations()\r\n \r\n    return (\r\n        <div >\r\n            <DatePicker\r\n                onChange={handleDateChange}\r\n                mode=\"range\"\r\n                timeFormat={false}\r\n                isValidDate={disableDates}\r\n                placeholder=\"Select date\"\r\n                className=\"test\"\r\n            />\r\n         \r\n            \r\n            {/* <DatePicker selected={startDate}  />                      */}\r\n        </div>\r\n    ) ;\r\n}\r\n\r\nexport default Calendar "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}